@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@{
    string? username = User.Identity?.Name ?? "Гість";
    bool isAdmin = User.IsInRole("admin");
    bool isAdminInUserMode = isAdmin && (Context.Session?.GetString("AdminMode") ?? "") == "user";
}

<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FILMix</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/CinemaInfrastructure.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Your existing CSS */
        /* Fix media queries (@@media should be @@media ) */
        @@media (max-width: 992px) {
            .navbar-nav

        {
            margin-top: 0.5rem;
        }

        .nav-link {
            padding: 0.5rem 0.75rem;
            font-size: 0.95rem;
        }

        .dropdown-toggle {
            font-size: 0.95rem;
        }

        .movie-card img {
            max-height: 240px;
        }

        .film-slider {
            width: 200px;
        }

        }

        @@media (max-width: 767px) {
            .navbar-brand

        {
            font-size: 1.4rem;
        }

        .nav-link,
        .dropdown-toggle {
            font-size: 0.9rem;
            padding: 0.4rem 0.6rem;
        }

        .main-content {
            padding: 1rem;
        }

        .footer {
            font-size: 0.75rem;
        }

        .btn {
            font-size: 0.85rem;
            padding: 0.4rem 0.8rem;
        }

        .section-title {
            font-size: 1.5rem;
        }

        .dashboard-actions,
        .user-actions {
            flex-direction: column;
            align-items: stretch;
        }

        .cinema-selection {
            max-width: 100%;
        }

        .movie-card img {
            max-height: 200px;
        }

        .film-slider {
            width: 160px;
        }

        .custom-session-btn {
            font-size: 1rem;
            padding: 8px 20px;
        }

        .name-section-vertical {
            font-size: 0.9rem;
            margin-right: 8px;
        }

        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">FilMix</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index") ? "active" : "")" asp-controller="Home" asp-action="Index">
                                <i class="fas fa-home"></i> Головна
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Movies" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index") ? "active" : "")" asp-controller="Movies" asp-action="Index">
                                <i class="fas fa-film"></i> Фільми
                            </a>
                        </li>
                        @if (!isAdmin || isAdminInUserMode)
                        {
                            <li class="nav-item">
                                <a class="nav-link @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Bookings") ? "active" : "")" asp-controller="Bookings" asp-action="MyBookings">
                                    <i class="fas fa-ticket-alt"></i> Мої квитки
                                </a>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="cinemaDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-theater-masks"></i> Кінотеатри
                                </a>
                                <ul class="dropdown-menu" id="cinemaList" aria-labelledby="cinemaDropdown">
                                    <!-- Populated via JavaScript -->
                                </ul>
                            </li>
                        }
                        @if (isAdmin && !isAdminInUserMode)
                        {
                            <li class="nav-item">
                                <a class="nav-link @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Movies" && ViewContext.RouteData.Values["Action"]?.ToString() == "Create") ? "active" : "")" asp-controller="Movies" asp-action="Create">
                                    <i class="fas fa-plus"></i> Додати фільм
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Cinemas") ? "active" : "")" asp-controller="Cinemas" asp-action="Index">
                                    <i class="fas fa-building"></i> Кінотеатри
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Sessions") ? "active" : "")" asp-controller="Sessions" asp-action="Index">
                                    <i class="fas fa-clock"></i> Сеанси
                                </a>
                            </li>
                        }
                    </ul>
                    <div class="d-flex align-items-center">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="dropdown user-profile">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-user"></i> @username
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                    <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile">Профіль</a></li>
                                    @if (isAdmin)
                                    {
                                        <li>
                                            <form method="post" asp-controller="Account" asp-action="ToggleAdminMode">
                                                <button type="submit" class="dropdown-item">
                                                    @(isAdminInUserMode ? "Режим адміністратора" : "Режим користувача")
                                                </button>
                                            </form>
                                        </li>
                                    }
                                    <li>
                                        <form method="post" asp-controller="Account" asp-action="Logout">
                                            <button type="submit" class="dropdown-item">Вийти</button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <a asp-controller="Account" asp-action="Login" class="btn btn-primary me-2"><i class="fas fa-sign-in-alt"></i> Увійти</a>
                            <a asp-controller="Account" asp-action="Register" class="btn btn-primary"><i class="fas fa-user-plus"></i> Реєстрація</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="main-content">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Головна</a></li>
                @if (ViewContext.RouteData.Values["Controller"]?.ToString() != "Home")
                {
                    <li class="breadcrumb-item"><a asp-controller="@ViewContext.RouteData.Values["Controller"]" asp-action="Index">@ViewContext.RouteData.Values["Controller"]</a></li>
                }
                @if (ViewContext.RouteData.Values["Action"]?.ToString() != "Index")
                {
                    <li class="breadcrumb-item active" aria-current="page">@ViewContext.RouteData.Values["Action"]</li>
                }
            </ol>
        </nav>
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <footer class="footer">
        <div class="container-fluid">
            © 2025 - FILMix - <a asp-controller="Home" asp-action="Privacy">Політика конфіденційності</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("DOMContentLoaded fired");
            console.log("User authenticated: @User.Identity.IsAuthenticated");
            console.log("isAdmin: @isAdmin, isAdminInUserMode: @isAdminInUserMode");
            const cinemaDropdown = document.getElementById("cinemaDropdown");
            if (cinemaDropdown) {
                console.log("cinemaDropdown element found");
                cinemaDropdown.addEventListener("shown.bs.dropdown", function () {
                    console.log("Dropdown opened, fetching cinemas...");
                    fetch("/api/cinemas")
                        .then(response => {
                            console.log("API response status:", response.status);
                            if (!response.ok) throw new Error("API error");
                            return response.json();
                        })
                        .then(data => {
                            console.log("Cinemas data:", data);
                            const dropdown = document.getElementById("cinemaList");
                            dropdown.innerHTML = "";
                            if (data && Array.isArray(data)) {
                                data.forEach(cinema => {
                                    const item = document.createElement("li");
                                    item.innerHTML = `<a class="dropdown-item cinema-selection" href="#" data-value="${cinema.id}">${cinema.name}</a>`;
                                    dropdown.appendChild(item);
                                });
                            } else {
                                console.log("No valid cinema data");
                                dropdown.innerHTML = '<li><span class="dropdown-item disabled">No cinemas available</span></li>';
                            }
                        })
                        .catch(error => console.error("Error loading cinemas:", error));
                });
                cinemaDropdown.addEventListener("click", function () {
                    console.log("cinemaDropdown clicked");
                });
            } else {
                console.error("cinemaDropdown element not found");
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>