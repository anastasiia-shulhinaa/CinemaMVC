@model IEnumerable<CinemaDomain.Model.Session>

<main class="container my-5">
    <h1 class="text-center mb-5 section-title">Сеанси</h1>


        <div class="mb-5">
            <div id="countByMovieChart"></div>
        </div>

    <!-- Anti-Forgery Token -->
    @Html.AntiForgeryToken()

    <!-- Create Session Form -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">Додати Сеанс</h5>
        </div>
        <div class="card-body">
            <form id="createSessionForm" class="row g-3">
                <!-- Form fields remain unchanged -->
                <div class="col-md-3 col-sm-6">
                    <div class="filter-group">
                        <label for="MovieId" class="form-label small mb-1">Фільм</label>
                        <select id="MovieId" name="MovieId" class="form-select" required>
                            <option value="">-- Виберіть фільм --</option>
                            @foreach (var movie in ViewBag.Movies)
                            {
                                <option value="@movie.Id">@movie.Title</option>
                            }
                        </select>
                    </div>
                </div>
                <!-- Other form fields... -->
                <div class="col-md-3 col-sm-6 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100"><i class="fas fa-plus me-1"></i> Створити</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Sessions Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Список Сеансів</h5>
        </div>
        <div class="card-body">
            @if (!Model.Any())
            {
                <p class="text-muted">Сеансів ще немає.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Фільм</th>
                                <th>Кінотеатр</th>
                                <th>Зал</th>
                                <th>Розклад</th>
                                <th>Створено</th>
                                <th>Статус</th>
                                <th>Дії</th>
                            </tr>
                        </thead>
                        <tbody id="sessionsTable">
                            @foreach (var session in Model)
                            {
                                <tr data-session-id="@session.Id">
                                    <td>@session.Movie.Title</td>
                                    <td>@session.Schedule.Hall.Cinema.Name</td>
                                    <td>@session.Schedule.Hall.Name</td>
                                    <td>@session.Schedule.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                                    <td>@session.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                                    <td>@(session.IsActive ? "Активний" : "Неактивний")</td>
                                    <td>
                                        <a href="javascript:void(0)" class="btn btn-primary btn-sm edit-session" data-id="@session.Id">Редагувати</a>
                                        <a href="javascript:void(0)" class="btn btn-danger btn-sm delete-session" data-id="@session.Id">Видалити</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</main>


@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawCharts);

        function drawCharts() {
            drawTopMovies(); // Call to the method that draws the top movies pie chart
        }

        function drawTopMovies() {
            fetch('/api/charts/topMovies')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Фільм'); // Column for Movie Title
                    dataTable.addColumn('number', 'К-сть сеансів'); // Column for Session Count

                    data.forEach(item => {
                        dataTable.addRow([item.movieTitle, item.sessionCount]); // Add rows for top movies
                    });

                    const options = {
                        pieHole: 0.4,
                        title: 'Топ 10 фільмів за кількістю сеансів',
                        width: '100%', // Responsive width
                        height: 500,
                        chartArea: { width: '85%', height: '85%' }, // Increased chart area even more for labels
                        sliceVisibilityThreshold: 0.01, // Lowered to 1% to ensure smaller slices are visible
                        colors: ['#d4af37', '#800020', '#f0e4d7', '#d1a77d', '#e0c8b0', '#b88b8b', '#a0522d', '#8b4513', '#cd853f', '#deb887'], // Matching your app's color scheme with variations
                        is3D: true, // Keep the 3D effect
                        pieSliceText: 'label', // Show movie titles on slices
                        pieSliceTextStyle: { color: '#fff', fontSize: 9, bold: true }, // Even smaller font size for better fit
                        titleTextStyle: { color: '#800020', fontSize: 16, bold: true },
                        legend: {
                            position: 'right',
                            textStyle: { color: '#800020', fontSize: 12 }
                        },
                            tooltip: { 
                                textStyle: { bold: true, fontSize: 12 },
                                showColorCode: true 
                            },
                        backgroundColor: '#fefefe',
                        animation: {
                            startup: true,
                            duration: 1000,
                            easing: 'out'
                        }
                    };

                    const chart = new google.visualization.PieChart(document.getElementById('countByMovieChart'));
                    chart.draw(dataTable, options);

                    // Handle case where no data is returned
                    if (data.length === 0) {
                        document.getElementById('countByMovieChart').innerHTML = '<p class="text-muted text-center">Немає даних для відображення.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching top movies:', error);
                    document.getElementById('countByMovieChart').innerHTML = '<p class="text-muted text-center">Помилка завантаження даних для графіку.</p>';
                });
        }
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJ+Y3vyBMOcHGqFtXJrQAB16fr1cqa1M6nHCk=" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            var csrfToken = $('input[name="__RequestVerificationToken"]').val();

            // Populate halls based on cinema
            $('#CinemaId').change(function () {
                const cinemaId = $(this).val();
                if (cinemaId) {
                    $.ajax({
                        url: '/Sessions/GetHalls',
                        type: 'GET',
                        data: { cinemaId: cinemaId },
                        success: function (data) {
                            $('#HallId').empty().append('<option value="">-- Виберіть зал --</option>');
                            $.each(data, function (i, hall) {
                                $('#HallId').append(`<option value="${hall.id}">${hall.name}</option>`);
                            });
                            $('#ScheduleId').empty().append('<option value="">-- Виберіть розклад --</option>');
                        },
                        error: function (xhr, status, error) {
                            console.error('Помилка завантаження залів:', error);
                        }
                    });
                } else {
                    $('#HallId').empty().append('<option value="">-- Виберіть зал --</option>');
                    $('#ScheduleId').empty().append('<option value="">-- Виберіть розклад --</option>');
                }
            });

            // Populate schedules based on hall
            $('#HallId').change(function () {
                const hallId = $(this).val();
                if (hallId) {
                    $.ajax({
                        url: '/Sessions/GetSchedules',
                        type: 'GET',
                        data: { hallId: hallId },
                        success: function (data) {
                            $('#ScheduleId').empty().append('<option value="">-- Виберіть розклад --</option>');
                            $.each(data, function (i, schedule) {
                                $('#ScheduleId').append(`<option value="${schedule.id}">${schedule.startTime}</option>`);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error('Помилка завантаження розкладів:', error);
                        }
                    });
                } else {
                    $('#ScheduleId').empty().append('<option value="">-- Виберіть розклад --</option>');
                }
            });

            // Create session
            $('#createSessionForm').submit(function (e) {
                e.preventDefault();
                var formData = {
                    MovieId: parseInt($('#MovieId').val()),
                    ScheduleId: parseInt($('#ScheduleId').val()),
                    PricePerSeat: parseFloat($('#PricePerSeat').val()),
                    IsActive: $('#IsActive').val() === 'true'
                };

                $.ajax({
                    url: '/Sessions/Create',
                    type: 'POST',
                    data: JSON.stringify(formData),
                    contentType: 'application/json',
                    headers: {
                        'RequestVerificationToken': csrfToken
                    },
                    success: function (data) {
                        $('#sessionsTable').append(`
                            <tr data-session-id="${data.id}">
                                <td>${$('#MovieId option:selected').text()}</td>
                                <td>${$('#CinemaId option:selected').text()}</td>
                                <td>${$('#HallId option:selected').text()}</td>
                                <td>${$('#ScheduleId option:selected').text()}</td>
                                <td>${new Date(data.createdAt).toLocaleString('uk-UA', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' })}</td>
                                <td>${formData.IsActive ? 'Активний' : 'Неактивний'}</td>
                                <td>
                                    <a href="javascript:void(0)" class="btn btn-primary btn-sm edit-session" data-id="${data.id}">Редагувати</a>
                                    <a href="javascript:void(0)" class="btn btn-danger btn-sm delete-session" data-id="${data.id}">Видалити</a>
                                </td>
                            </tr>`);
                        $('#createSessionForm')[0].reset();
                        $('#HallId').empty().append('<option value="">-- Виберіть зал --</option>');
                        $('#ScheduleId').empty().append('<option value="">-- Виберіть розклад --</option>');
                        $('.text-muted').remove();
                        // Refresh the chart after adding a new session
                        drawTopMovies();
                    },
                    error: function (xhr, status, error) {
                        alert('Помилка створення сеансу: ' + xhr.responseText);
                    }
                });
            });

            // Edit session
            $(document).on('click', '.edit-session', function () {
                var sessionId = $(this).data('id');
                $.ajax({
                    url: `/Sessions/GetSession/${sessionId}`,
                    type: 'GET',
                    success: function (data) {
                        var modalHtml = `
                            <div class="modal fade" id="editSessionModal" tabindex="-1" aria-labelledby="editSessionModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="editSessionModalLabel">Редагувати сеанс</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="editSessionForm">
                                                <input type="hidden" name="Id" value="${data.id}" />
                                                <div class="mb-3">
                                                    <label class="form-label small mb-1">Активний</label>
                                                    <select name="IsActive" class="form-select">
                                                        <option value="true" ${data.isActive ? 'selected' : ''}>Так</option>
                                                        <option value="false" ${!data.isActive ? 'selected' : ''}>Ні</option>
                                                    </select>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-primary" onclick="saveSession(${data.id})">Зберегти</button>
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрити</button>
                                        </div>
                                    </div>
                                </div>
                            </div>`;
                        $('body').append(modalHtml);
                        var modal = new bootstrap.Modal($('#editSessionModal')[0]);
                        modal.show();
                    },
                    error: function (xhr, status, error) {
                        alert('Помилка завантаження сеансу: ' + error);
                    }
                });
            });

            // Delete session
            $(document).on('click', '.delete-session', function () {
                if (!confirm('Ви впевнені, що хочете видалити цей сеанс?')) return;
                var sessionId = $(this).data('id');
                $.ajax({
                    url: `/Sessions/Delete/${sessionId}`,
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': csrfToken
                    },
                    success: function () {
                        $(`tr[data-session-id="${sessionId}"]`).remove();
                        if ($('#sessionsTable tr').length === 0) {
                            $('#sessionsTable').parent().prepend('<p class="text-muted">Сеансів ще немає.</p>');
                        }
                        // Refresh the chart after deleting a session
                        drawTopMovies();
                    },
                    error: function (xhr, status, error) {
                        alert('Помилка видалення сеансу: ' + error);
                    }
                });
            });
        });

        function saveSession(id) {
            var formData = {
                Id: id,
                IsActive: $('#editSessionForm select[name="IsActive"]').val() === 'true'
            };
            $.ajax({
                url: `/Sessions/Edit/${id}`,
                type: 'POST',
                data: JSON.stringify(formData),
                contentType: 'application/json',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    var row = $(`tr[data-session-id="${id}"]`);
                    row.find('td:eq(5)').text(data.isActive ? 'Активний' : 'Неактивний');
                    bootstrap.Modal.getInstance($('#editSessionModal')[0]).hide();
                    $('#editSessionModal').remove();
                    // Refresh the chart after editing a session
                    drawTopMovies();
                },
                error: function (xhr, status, error) {
                    alert('Помилка оновлення сеансу: ' + error);
                }
            });
        }
    </script>
}