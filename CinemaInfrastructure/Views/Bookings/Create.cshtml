@model CinemaInfrastructure.ViewModels.BookingFormModel

@{
    ViewData["Title"] = "Створити бронювання";
}

<section class="film-page gray-bg py-4">
    <div class="container">
        <div class="header-info d-flex justify-content-between align-items-center mb-4">
            <div>
                <div class="film-name">@Model.Movie.Title <span class="availible-year">16+</span></div>
            </div>
            <div>
                <a href="@Url.Action("Index", "Movies")" class="button-empty">До списку фільмів <span class="d-icon icon-next"></span></a>
            </div>
        </div>

        <div class="row">
            <!-- Left column for video/trailer -->
            <div class="col-lg-9 col-md-12">
                <div class="video mb-4">
                    <label for="TrailerUrl">YouTube Трейлер (URL)</label>
                    <input type="text" class="form-control mb-3" id="TrailerUrl" name="TrailerUrl" value="@Model.Movie.TrailerLink" placeholder="https://www.youtube.com/embed/..." onchange="updateTrailer()">
                    <div class="embed-responsive embed-responsive-16by9">
                        <iframe class="embed-responsive-item" id="TrailerPreview" src="@Model.Movie.TrailerLink" allowfullscreen></iframe>
                    </div>
                </div>

                <form asp-action="ConfirmBooking" method="post">
                    <div class="form-group">
                        <label for="SessionId" class="control-label">Виберіть сеанс</label>
                        <select id="SessionId" name="SessionId" class="form-control" onchange="loadAvailableSeats()">
                            <option value="">-- Оберіть сеанс --</option>
                            @foreach (var time in Model.AvailableTimes)
                            {
                                <option value="@time.SessionId">@time.StartTime</option>
                            }
                        </select>
                        <span asp-validation-for="SessionId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <div id="seatsArea">
                            <!-- Available seats will be loaded here -->
                        </div>
                    </div>

                    <div class="form-group">
                        <input type="hidden" name="IsPrivate" value="false" />
                        <button type="submit" class="btn btn-primary mt-3">Забронювати</button>
                    </div>
                </form>
            </div>

            <!-- Right column for movie poster -->
            <div class="col-lg-3 col-md-12">
                <div class="poster mb-3">
                    <label for="PosterUrl">URL постера</label>
                    <input type="text" class="form-control mb-2" id="PosterUrl" name="PosterUrl" value="@Model.Movie.BannerUrl" placeholder="https://example.com/poster.jpg" onchange="updatePoster()">
                    <img id="PosterPreview" src="@Model.Movie.BannerUrl" class="img-fluid" alt="Poster preview" />
                </div>

                <div class="detail-info">
                        <b>Жанр: </b>@foreach (var cat in Model.Movie.Categories)
                        {
                            <span>@cat.Name</span>
                        }
                    <br />
                    <b>Режисери: </b>@foreach (var d in Model.Movie.Directors)
                    {
                        <span>@d.FullName</span>
                    }
                    <br />
                    <b>Актори: </b>@foreach (var a in Model.Movie.Actors)
                    {
                        <span>@a.FullName</span>
                    }
                    <br />
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Function to update the trailer preview
        function updateTrailer() {
            const trailerUrl = document.getElementById("TrailerUrl").value;
            const iframe = document.getElementById("TrailerPreview");
            iframe.src = trailerUrl; // Update iframe src to the new URL
        }

        // Function to update the poster image preview
        function updatePoster() {
            const posterUrl = document.getElementById("PosterUrl").value;
            const img = document.getElementById("PosterPreview");
            img.src = posterUrl; // Update image src to the new URL
        }

        // Function to load available seats for selected session
        function loadAvailableSeats() {
            const sessionId = document.getElementById("SessionId").value;

            if (!sessionId) {
                document.getElementById("seatsArea").innerHTML = ""; // Clear seats if no session selected
                return;
            }

            fetch(`/Bookings/GetSeatsForSession?sessionId=${sessionId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById("seatsArea").innerHTML = html; // Load seats into the div
                })
                .catch(error => console.error('Error loading seats:', error));
        }
    </script>
}
