@model CinemaInfrastructure.ViewModels.BookingFormModel

@{
    ViewData["Title"] = "Бронювання квитків";
    var videoId = Model.Movie.TrailerLink?.Contains("v=") == true ? Model.Movie.TrailerLink.Split("v=")[1] : null;
    var embedLink = videoId != null ? $"https://www.youtube.com/embed/{videoId}" : null;
}

<section class="film-page gray-bg py-4">
    <div class="container">
        <h2 class="mb-3">@Model.Movie.Title <span class="badge bg-primary px-3 py-2 rounded-pill fs-6">@Model.Movie.Rating</span></h2>

        @if (!string.IsNullOrEmpty(Model.Movie.Language))
        {
            <div class="film-name-translate">@Model.Movie.Language</div>
        }
        <div>
            <a href="@Url.Action("Index", "Movies")" class="button-empty">Розклад <span class="d-icon icon-next"></span></a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-9 col-md-12">
            <div class="video mb-4 position-relative">
                <div class="embed-responsive embed-responsive-16by9">
                    @if (!string.IsNullOrEmpty(embedLink))
                    {
                        <iframe class="embed-responsive-item" id="TrailerPreview"
                                src="@embedLink"
                                frameborder="0"
                                allowfullscreen
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                                referrerpolicy="strict-origin-when-cross-origin"
                                title="@Model.Movie.Title | Офіційний трейлер">
                        </iframe>
                    }
                    else
                    {
                        <p class="text-muted">Трейлер недоступний.</p>
                    }
                </div>
            </div>
            <div class="mt-4">
                <h4 class="mb-3">Доступні дати показу</h4>
                @if (Model.GroupedTimes != null && Model.GroupedTimes.Any())
                {
                    // Case 1: No cinema selected, show sessions grouped by cinema
                    foreach (var cinemaGroup in Model.GroupedTimes.OrderBy(g => g.Key.Name))
                    {
                        var cinema = cinemaGroup.Key;
                        var times = cinemaGroup.Value;
                        if (!times.Any()) continue;

                        <h5>@cinema.Name</h5>
                        <div class="date-film-slider d-flex flex-wrap gap-2" data-cinema-id="@cinema.Id">
                            @foreach (var date in times.Select(t => t.StartTime.Date).Distinct().OrderBy(d => d))
                            {
                                <div class="date-item @(date == times.First().StartTime.Date ? "active" : "")"
                                     data-date="@date.ToString("yyyy-MM-dd")"
                                     data-cinema-id="@cinema.Id">
                                    <div class="number-day">@date.Day</div>
                                    <div class="day">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetShortestDayName(date.DayOfWeek)</div>
                                </div>
                            }
                        </div>
                        <div class="tabs-content">
                            @foreach (var timeGroup in times.GroupBy(t => t.StartTime.Date))
                            {
                                <ul class="time-list @(timeGroup.Key == times.First().StartTime.Date ? "active" : "")"
                                    data-date="@timeGroup.Key.ToString("yyyy-MM-dd")"
                                    data-cinema-id="@cinema.Id">
                                    @foreach (var item in timeGroup.OrderBy(t => t.StartTime.TimeOfDay))
                                    {
                                        <li>
                                            <a href="#" data-session-id="@item.SessionId" data-start-time="@item.StartTime.ToString("HH:mm")">
                                                @item.StartTime.ToString("HH:mm")
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    }
                }
                else if (Model.AvailableTimes.Any())
                {
                    // Case 2: Cinema selected, show filtered sessions
                    <div class="date-film-slider d-flex flex-wrap gap-2">
                        @foreach (var date in Model.AvailableTimes.Select(t => t.StartTime.Date).Distinct().OrderBy(d => d))
                        {
                            <div class="date-item @(date == Model.AvailableTimes.First().StartTime.Date ? "active" : "")"
                                 data-date="@date.ToString("yyyy-MM-dd")">
                                <div class="number-day">@date.Day</div>
                                <div class="day">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetShortestDayName(date.DayOfWeek)</div>
                            </div>
                        }
                    </div>
                    <div class="tabs-content">
                        @foreach (var timeGroup in Model.AvailableTimes.GroupBy(t => t.StartTime.Date))
                        {
                            <ul class="time-list @(timeGroup.Key == Model.AvailableTimes.First().StartTime.Date ? "active" : "")"
                                data-date="@timeGroup.Key.ToString("yyyy-MM-dd")">
                                @foreach (var item in timeGroup.OrderBy(t => t.StartTime.TimeOfDay))
                                {
                                    <li>
                                        <a href="#" data-session-id="@item.SessionId" data-start-time="@item.StartTime.ToString("HH:mm")">
                                            @item.StartTime.ToString("HH:mm")
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">Наразі немає доступних сеансів для цього фільму.</p>
                }
            </div>

            <div class="about-film mt-4">
                <h3>Опис фільму</h3>
                <div class="description">@Model.Movie.Description</div>
            </div>
        </div>

        <div class="col-lg-3 col-md-12">
            <div class="poster mb-3">
                <img id="PosterPreview" src="@Model.Movie.BannerUrl" class="img-fluid" alt="Постер фільму @Model.Movie.Title" />
            </div>

            <div class="detail-info">
                <p><b>Мова: </b>@Model.Movie.Language</p>
                <p><b>Тривалість: </b>@Model.Movie.Duration хв</p>
                <p>
                    <b>Жанр: </b>
                    @if (Model.Movie.Categories != null && Model.Movie.Categories.Any())
                    {
                        @string.Join(", ", Model.Movie.Categories.Select(c => c.Name))
                    }
                    else
                    {
                        @:Невідомо
                    }
                </p>
                <p>
                    <b>Режисер: </b>
                    @if (Model.Movie.Directors != null && Model.Movie.Directors.Any())
                    {
                        @string.Join(", ", Model.Movie.Directors.Select(d => d.FullName))
                    }
                    else
                    {
                        @:Невідомо
                    }
                </p>
                <p>
                    <b>Актори: </b>
                    @if (Model.Movie.Actors != null && Model.Movie.Actors.Any())
                    {
                        @string.Join(", ", Model.Movie.Actors.Take(5).Select(a => a.FullName))
                        @if (Model.Movie.Actors.Count() > 5)
                        {
                            <span>...</span>
                        }
                    }
                    else
                    {
                        @:Невідомо
                    }
                </p>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <h2>Виберіть місця</h2>
        <div id="seatsArea">
            @if (Model.SessionSeats != null && Model.SessionSeats.Any())
            {
                <div class="hall-structure">
                    <span class="screen"><img src="https://www.palladium-cinema.com.ua/desktop/img/screen.png" alt="Екран" /></span>
                    <div class="seats-container">
                        @foreach (var row in Model.SessionSeats.GroupBy(s => s.RowNumber))
                        {
                            <div class="row">
                                <span class="number-of-row">@row.Key</span>
                                <div class="seats">
                                    @foreach (var seat in row.OrderBy(s => s.SeatNumber))
                                    {
                                        var disabled = seat.IsAvailable ? "" : "booked";
                                        <div class="seat @disabled"
                                             data-seat="@($"{seat.RowNumber}-{seat.SeatNumber}")"
                                             data-id="@seat.Id"
                                             data-price="@seat.Price"
                                             title="Ряд @seat.RowNumber, Місце @seat.SeatNumber">
                                            @seat.SeatNumber
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <p>Оберіть час показу, щоб побачити доступні місця.</p>
            }
        </div>

        <div id="selectedSeatsInfo" class="mt-3">
            <p>Обрані місця: <span id="selectedSeatsList"></span></p>
            <p>Загальна вартість: <span id="totalPrice">0.00</span> грн</p>
        </div>

        <form asp-action="ConfirmBooking" method="post" id="bookingForm">
            <input type="hidden" name="SelectedSeats" id="SelectedSeatsInput" value="" />
            <input type="hidden" name="SessionId" id="SelectedSessionId" value="@Model.SessionId" />
            <button type="submit" class="btn btn-primary mt-3" disabled>Забронювати</button>
        </form>
    </div>
</section>

<style>
    .video {
        position: relative;
    }

    .embed-responsive {
        position: relative;
        display: block;
        width: 100%;
        padding: 0;
        overflow: hidden;
    }

        .embed-responsive::before {
            display: block;
            content: "";
            padding-top: 56.25%;
        }

        .embed-responsive .embed-responsive-item {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: 0;
        }

    .date-item {
        background-color: #f5f5f5;
        border-radius: 8px;
        padding: 10px 12px;
        text-align: center;
        cursor: pointer;
        width: 52px;
        transition: background-color 0.3s, color 0.3s;
    }

        .date-item.active {
            background-color: #333;
            color: white;
        }

        .date-item .number-day {
            font-size: 16px;
            font-weight: bold;
        }

        .date-item .day {
            font-size: 12px;
        }

    .time-list {
        display: none;
        flex-wrap: wrap;
        gap: 10px;
        padding-left: 0;
        list-style: none;
    }

        .time-list.active {
            display: flex;
        }

        .time-list li a {
            display: inline-block;
            padding: 10px 16px;
            background-color: #f7f7f7;
            border-radius: 6px;
            font-weight: bold;
            text-decoration: none;
            color: #333;
            border: 1px solid #ddd;
            transition: background-color 0.2s;
        }

            .time-list li a:hover {
                background-color: #e0e0e0;
            }

            .time-list li a.selected {
                background-color: #333;
                color: white;
            }

    .hall-structure {
        text-align: center;
        margin: 20px 0;
    }

    .seats-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 20px;
    }

    .row {
        display: flex;
        align-items: center;
        margin: 5px 0;
        width: 100%;
        max-width: 600px;
    }

    .number-of-row {
        width: 30px;
        text-align: right;
        margin-right: 10px;
        font-weight: bold;
        color: #5c534c;
    }

    .seats {
        display: flex;
        flex: 1;
        justify-content: center;
    }

    .seat {
        display: inline-block;
        width: 50px;
        height: 50px;
        margin: 4px;
        background-color: #eee;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #5c534c;
        font-weight: bold;
    }

        .seat:hover {
            background-color: #ddd;
            transform: scale(1.05);
        }

        .seat.selected {
            background-color: #800020;
            color: white;
        }

        .seat.booked {
            background-color: #e0e0e0;
            cursor: not-allowed;
        }
</style>

@section Scripts {
    <script>
        let selectedSeats = [];
        let totalPrice = 0;

        function updateSelectedSeatsInfo() {
            document.getElementById("selectedSeatsList").innerText = selectedSeats.join(', ');
            document.getElementById("totalPrice").innerText = totalPrice.toFixed(2);
            document.getElementById("SelectedSeatsInput").value = JSON.stringify(selectedSeats);
            const sessionId = document.getElementById("SelectedSessionId").value;
            document.querySelector('#bookingForm button[type="submit"]').disabled = selectedSeats.length === 0 || !sessionId;
        }

        function toggleSeat(event) {
            const seat = event.target;
            if (seat.classList.contains('booked')) return;

            const seatNumber = seat.dataset.seat;
            const seatPrice = parseFloat(seat.dataset.price);
            const isSelected = selectedSeats.includes(seatNumber);

            if (isSelected) {
                selectedSeats = selectedSeats.filter(s => s !== seatNumber);
                totalPrice -= seatPrice;
                seat.classList.remove('selected');
            } else {
                selectedSeats.push(seatNumber);
                totalPrice += seatPrice;
                seat.classList.add('selected');
            }

            updateSelectedSeatsInfo();
        }

        function showTimesForDate(date, cinemaId) {
            document.querySelectorAll(`.time-list${cinemaId ? `[data-cinema-id="${cinemaId}"]` : ''}`).forEach(list => {
                list.classList.toggle('active', list.dataset.date === date);
            });

            document.querySelectorAll(`.time-list${cinemaId ? `[data-cinema-id="${cinemaId}"]` : ''} a`).forEach(a => a.classList.remove('selected'));
            document.getElementById("seatsArea").innerHTML = "<p>Оберіть час показу, щоб побачити доступні місця.</p>";
            document.getElementById("SelectedSessionId").value = "";
            selectedSeats = [];
            totalPrice = 0;
            updateSelectedSeatsInfo();
        }

        function loadAvailableSeats(sessionId) {
            console.log('Fetching seats for sessionId:', sessionId);
            document.getElementById("SelectedSessionId").value = sessionId;
            selectedSeats = [];
            totalPrice = 0;
            updateSelectedSeatsInfo();

            fetch(`/Bookings/GetSeatsForSession?sessionId=${sessionId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.text();
                })
                .then(html => {
                    document.getElementById("seatsArea").innerHTML = html;
                    document.querySelectorAll('.seat').forEach(seat => {
                        seat.addEventListener('click', toggleSeat);
                    });
                })
                .catch(error => {
                    console.error('Error loading seats:', error);
                    document.getElementById("seatsArea").innerHTML = "<p class='text-danger'>Не вдалося завантажити місця.</p>";
                });
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.date-item').forEach(item => {
                item.addEventListener('click', () => {
                    const cinemaId = item.dataset.cinemaId;
                    document.querySelectorAll(`.date-item${cinemaId ? `[data-cinema-id="${cinemaId}"]` : ''}`).forEach(d => d.classList.remove('active'));
                    item.classList.add('active');
                    showTimesForDate(item.dataset.date, cinemaId);
                });
            });

            document.querySelectorAll('.time-list a').forEach(a => {
                a.addEventListener('click', e => {
                    e.preventDefault();
                    const cinemaId = a.closest('.time-list').dataset.cinemaId;
                    document.querySelectorAll(`.time-list${cinemaId ? `[data-cinema-id="${cinemaId}"]` : ''} a`).forEach(el => el.classList.remove('selected'));
                    a.classList.add('selected');
                    loadAvailableSeats(a.dataset.sessionId);
                });
            });

            document.querySelectorAll('.seat').forEach(seat => {
                seat.addEventListener('click', toggleSeat);
            });

            // Listen for cinema selection changes
            const cinemaSelectionDropdown = document.getElementById("cinemaSelectionDropdown");
            if (cinemaSelectionDropdown) {
                cinemaSelectionDropdown.addEventListener("click", function (e) {
                    e.stopPropagation();
                    const target = e.target.closest(".cinema-selection");
                    if (target) {
                        const cinemaId = target.getAttribute("data-value");
                        const cinemaName = target.textContent;
                        fetch(`/Home/SetCinemaFilter?cinemaId=${cinemaId}&cinemaName=${encodeURIComponent(cinemaName)}`, {
                            method: "POST"
                        })
                            .then(response => {
                                if (response.ok) {
                                    // Redirect to the same Create page with the current sessionId
                                    const currentSessionId = @Model.SessionId;
                                    window.location.href = `/Bookings/Create?sessionId=${currentSessionId}`;
                                }
                            })
                            .catch(error => console.error("Error setting cinema filter:", error));
                        cinemaSelectionDropdown.classList.remove("show");
                    }
                });
            }
        });
    </script>
}